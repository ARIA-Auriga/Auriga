----------------------------------------
//1188 [2014/01/23] by refis

・ターボトラックのロールバック修正（npc_quest_turbo.txt）

----------------------------------------
//1187 [2014/01/23] by refis

・ターボトラックの入場制限を修正（npc_quest_turbo.txt）
	Thanks さいこ さん

・カプラ倉庫、カプラカートレンタル時にカプラポイントが付与されないのを修正（npc_misc_kafra.txt, npc_job_23supernovice.txt）
	Thanks さいこ さん

・アルベルタの少年クエスト実装（npc_quest_yggdrasil.txt, npc_town_alberta.txt）

・quest_db.txtの更新（quest_db.txt）

----------------------------------------
//1186 [2014/01/22] by refis

・グロリアス武器交換時の誤りを修正（npc_quest_glorias.txt）

----------------------------------------
//1185 [2014/01/22] by refis

・グロリアス交換NPC実装（conf/map_auriga.conf, npc_quest_glorias.txt）

・グロリアス関連交換NPCを修正（npc_quest_arena.txt, npc_quest_turbo.txt, npc_town_aldebaran.txt）

・item_dbの更新（item_db.txt, item_db_pre.txt）

----------------------------------------
//1184 [2014/01/21] by Rayce

・Auriga-1176以降、RETCODEがまだ残っていた部分を修正（script.c）

・progressbar命令で60秒以上の時間を指定するとタイムアウトで強制的にcloseされる問題を修正（script.c）

・スクリプトのハッシュサイズを 1021 ⇒ 1571 に拡大（script.c）
  使用される変数が増えてきたためハッシュ値の分散性を最適化する

・変数のスコープの局在化（db.c, grfio.c）

----------------------------------------
//1183 [2014/01/20] by refis

・Auriga-1182のスペルミスを修正（bonus.c）
	Thanks LunarPhantom さん、rusya7234 さん

・NPCスキル「ベナムフォグ」はランドプロテクターの阻害効果を受けるよう修正（skill.c）

・NPCスキル「ベナムフォグ」は毒属性のプレイヤーにダメージを発生させないよう修正（skill.c）

・霧の森NPC実装（conf/map_auriga.conf, mapflag_memorial.txt, npc_memorial_mistwood.txt）

----------------------------------------
//1182 [2014/01/19] by Rayce

・Auriga-1181以降、packet_db.txt 読み込み時に解析エラーが発生したときメモリリークが発生する
  問題を修正（clif.c）

・packetdb_readdb_sub() から不要な変数を削除（clif.c）

・アイテム活性化中に再度活性化が発生するとき、タイマーが削除されてなかったのを修正（bonus.c）

・オートスペルとアクティブアイテムのビットマスク判定をまとめて処理を簡素化（bonus.c）

----------------------------------------
//1181 [2014/01/19] by Rayce

・コンパイルオプション PACKETVER の指定に合わせて packet_db.txt を自動的に読み取るように改善（clif.c）

  ※packet_db.txt に「#packet_ver: YYYYMMDD」を追加。
	PACKETVER を元に直近の日付を特定して上書きする仕組み。
    これにより、packet_db.txt からコメントアウトを外す作業が不要になる。

  ※同日のクライアント（2005-05-27gRagexe と 2005-05-27iRagexe 等）が複数ある場合は一番下に
    書かれた定義が有効になる。
    この場合、上に書かれた定義を有効にするには従来通り下の定義をコメントアウトすること。

  ※もし自動取得ではなく特定の日付を使用したい場合は、#packet_ver の値を PACKETVER と同じにして
    一番下に定義すること。
    PACKETVER と同一のときが最優先になるため。

・cppcheckを使った静的チェックのうち、変数の局所化を実施

----------------------------------------
//1180 [2014/01/18] by Rayce

・PACKETVER が 20120925 以上のとき、アイテムの追加処理に失敗したときのパケット位置が
  間違っているのを修正（clif.c）
	reported by LunarPhantomさん

・Auriga-1173以降、progressbar命令の指定時間がミリ秒単位になっているスクリプトを修正
  （npc_quest_ashvacuum.txt, npc_quest_yggdrasil.txt）
	reported by rusya7234さん

・ロック付きファイルの保存処理において、何かしらの原因で古いファイルの削除に失敗したときは
  リネームせずに保管しておくようにする（lock.c）

  ※TXTモードでsaveフォルダ内に .tmp ファイルが残っていた場合は、サーバ起動前に
    古いファイルを手動で削除して .tmp ファイルをリネームすることで最新のデータを
    復旧することが出来ます。

・コンパイルオプション NO_SCDATA_SAVING が有効のとき、コンパイルできない問題を修正
  （int_status.c, statusdb_txt.*, statusdb_sql.*）

・Auriga-1179の size_t に対する型変換のミスを修正（malloc.c）

----------------------------------------
//1179 [2014/01/18] by Rayce

・cppcheckを使った静的チェック修正の続き
	-> @callmerc のメッセージのNULL判定が間違っていたのを修正（atcommand.c）

	-> 精霊関連DBを再読み込みする @reloadelemdb を追加（atcommand.*）

	-> sscanf で文字列を読み込む場合は長さを指定するようにセキュリティの強化
	   （char.c, inter.c, grfio.c, login.c, httpd.c, socket.c）

	-> ファイルハンドラのクローズされておらずリソースリークが発生するのを修正（httpd.c）

	-> ファイルハンドラが2回クローズされる可能性を修正（grfio.c）

	-> SQLクエリ発行時の文字列長チェックが動作していなかった問題を修正（sqldbs.c）

	-> 意味のないコードをコメントアウト（guilddb_txt.c, clif.c）

	-> size_t型を printf() するときは %lu を使うように修正（malloc.c）

	-> unsigned型に対してマイナスチェックは不要なので変更（httpd.c, core.c, winservice.c）

	-> 未使用且つ不要な関数 do_final_chat() を削除（chat.*）

	-> 変数のスコープを局所化

・キャラ新規作成時の応答パケット処理を mmo_char_send006d() としてまとめる（char.c）

・キャラ新規作成に失敗したときのパケットスキップ位置が間違っているのを修正（char.c）

・@reloadmercdb を実行しても再読込が正常に動作していなかったのを修正（merc.c）

・elem_db_add.txt がデフォルトで用意されてなかったのでファイルを追加（db/addon/elem_db_add.txt）

・db_ref.txt にelem_db.txtの解説がなかったので追加（doc/db_ref.txt）

----------------------------------------
//1178 [2014/01/09] by Rayce

・callshop命令でPointShopからアイテムが取得できるように修正（script.c）
	reported by rusya7234さん

・[SQL] Auriga-1176以降、mysql_query() 実行後に結果セットの保存処理が無くなっていたバグを修正（sqldbs.c）
	reported by rusya7234さん

----------------------------------------
//1177 [2014/01/05] by Rayce

・Auriga-1176のファイル同梱漏れ（common/*.c）

・cppcheckを使った静的チェックを一部修正
  http://cppcheck.sourceforge.net
	-> /recall2, /remove2 コマンドが動作しなかったのを修正（clif.c）

	-> 子守唄状態でスキルユニットが見つからなかったときにサーバクラッシュする可能性を修正（status.c）

	-> フォントアイテムでないものの使用期限が切れたとき、フォントが初期化される問題を修正（pc.c）

	-> bAddRevEffの引数の最大値-最小値チェックの間違いを修正（bonus.c）

	-> 歩行パスの最大値 MAX_WALKPATH でループを打ち切る（path.c）

	-> sscanf で文字列を読み込む場合は長さを指定するようにセキュリティの強化
	   （atcommand.c, extra.c, map.c, msg.c, npc.c, script.c, mapreg_txt.c）

	-> unsigned型に対してマイナスチェックは不要なので削除（buyingstore.c, npc.c）

	-> 使用されない変数を削除（guild.c, homun.c, script.c, skill.c, unit.c）

	-> 意味のない初期化を削除（mob.c, skill.c）

	-> 冗長なNULLチェックを削除（skill.c, status.c）

	-> 括弧の囲みミスを修正（battle.c, clif.c）

	-> 変数のスコープを局所化

----------------------------------------
//1176 [2014/01/05] by Rayce

・改行コードの定義を RETCODE から NEWLINE に変更
  RETCODE は <sqlext.h> 等で既に定義されており重複する可能性があるため

・武器精錬可能アイテムリスト送信処理（0x221）に与える引数をrAthenaベースで補完（clif.c）

・gcc4.8.1での警告修正
	-> WindowsHandlerの初期値をNULLではなく 0 にする（winservice.c）
	   RegisterServiceCtrlHandlerEx() は失敗時に 0 を返すため、INVALID_HANDLE_VALUE は使えない

	-> chardb_txt_read() が常にtrueを返していたのを修正（chardb_txt.c）

	-> Mobの特殊AIでスキルを使用させるとき、定義されてない命令対象が指定されていた場合はその
	   命令を実行したMobのBlockIDが表示されるようにメッセージを変更（mob.c）

	-> db/attr_fix.txt 読み込み時、各テーブルのヘッダのLvと最大値が読み込めなかった場合は
	   そのテーブルの読み込みをスキップするように強化（pc.c）

	-> 未使用の変数を削除（atcommand.c, battle.c, clif.c, script.c, skill.c, unit.c）

・[SQL] SQLクエリ実行してエラーが発生した後、前回のSQLクエリの結果が参照できてしまうのを修正（sqldbs.c）

・[SQL] ROLLBACKを複数実行したときのトランザクションカウンタの補正漏れを修正（sqldbs.c）

----------------------------------------
//1175 [2014/01/05] by refis

・スクリプト関数「checkactiveitem」で前方一致したフラグ値しか得られないミスを修正（script.c）

・アルベルタ改修に伴う関連NPC座標の変更（script/npc/*）

----------------------------------------
//1174 [2014/01/04] by Rayce

・[SQL] 作成したプリペアドステートメントを保存するように改善（sqldbs.*）
        クエリ文字列で作成済みのstmtを検索したり、sqldbs_close() で
        メモリリークしないようにstmtのクローズが出来るようになります

・[SQL] ギルド城の定期同期セーブ処理をプリペアドステートメントに変更（guilddb_sql.c）
        毎回stmtを用意するのではなく、バインド済みの領域を使い回す

・[SQL] プリペアドステートメントの初期化に失敗したときはNULLを返すように強化
        （sqldbs.c, accregdb_sql.c, chardb_sql.c, account_sql.c）

・メール本文のデータ取得時の処理を最適化（maildb_txt.c, maildb_sql.c）

・hex_dump() の処理を最適化（utils.c）

----------------------------------------
//1173 [2014/01/04] by Rayce

・タイマーのキャッシュをデフォルトで無効にする（timer.c）
	-> OSのタイマー関数の呼び出しが負荷になることを考慮して、gettick() は256回まではキャッシュ
       された値を返す仕組みになっていました。
	   しかし、それにより経過時間を正しく取得できず、タイマー系の処理が動作しない等の弊害が
	   実は随所にありました。
	   今後はeA方式でキャッシュをデフォルトで無効にします。
	   もし負荷が大きいケースがある場合、コンパイラオプションの TIMER_CACHE を有効にしてください。
	   TIMER_CACHE=256 がこれまでと同様の動作です。
	   必要に応じて値を小さくしてもいいかもしれません。

	-> gettick() の呼び出し回数を抑えるように変更。
	   出来るだけ関数の最初で getick() を呼び出して変数に保存しておくことにより、実際の経過
	   時間を参照できるようにする。

	-> progressbar命令実行後に処理が続行できない場合がある問題を修正
		reported by mayuraさん

・progressbar命令の仕様変更（clif.*, script.c, doc/script_reg.txt）
	-> 引数に指定する時間はrAthenaと同じくミリ秒（ms）ではなく秒（sec）に変更
	   クライアントが秒でしか受け付けていないため

	-> 引数を1つ増やし、色が指定できるように拡張

	-> 処理機構をmenu系/sleep系と同じにする
	   STOPではなくRERUNLINEにし、経過時間の判定はclif.cではなくscript.cに留める

	-> スタック解放時にprogress情報を初期化する

	-> プレイヤーがアタッチされてないときに命令を呼び出したとき、
	   「fatal error ! player not attached!」が表示されるように変更

・sleep命令およびsleep2関数で、スクリプトが再開されるときにスタックからtickの値を
  取得していた無駄を改善（script.c）

・sleep2関数でアタッチに成功したとき、1以外の値が返る可能性を修正（script.c）

----------------------------------------
//1172 [2014/01/04] by Rayce

・座標および範囲指定を持つ定期沸きモンスターを出現させるときにスタック判定された場合、
  侵入可能セルの判定が mob_spawn() 時よりも小さくなっていたため侵入可能セルが見つからずに
  削除されてしまっていたバグを修正（npc.c）
	reported by rapisさん

・ポリンとエンペリウムのIDをenumとして定義（battle.c, clif.c, mob.c, skill.c, status.c, map.h）

・battle_check_target() の処理を少し最適化（battle.c）

----------------------------------------
//1171 [2014/01/03] by Rayce

・クエスト関係の処理見直し
	-> quest_search_index() をstaticにし、代わりに quest_get_data() を使う（clif.c, quest.*）

	-> 討伐データベースの最大数が MAX_QUEST_DB で制限されているのを撤廃
	   リストを動的に確保し、同一のMobIDが存在しないようにする（quest.*, map.c）

	-> 討伐データベースの検索でMobIDが0のときもヒットしていた問題を修正
	   独自のbinary searchではなく標準の bsearch() を使うように簡素化（quest.c）

	-> MAX_QUEST_DBの定義はquest.c内でしか参照されないので、mmo.hからquest.hに移動（mmo.h, quest.h）

・printfのフォーマット %z は処理系によって動作しないため、unsigned long型にキャストする（sqldbs.c, pc.c）

・サーバクラッシュ時に生成される crashdump.log にAurigaのバージョンを記録する（core.c）

・aMalloc, aCalloc, aReallocによって48KBを超えるデータがアロケートされ、その後メモリリークが
  発生した場合、ログに記載されるサイズが常に0になっていたのを修正（mallo.c）

・Auriga-1168で追加した winservice.c, winservice.h がdspに記載されてなかったので追記（*.dsp）

----------------------------------------
//1170 [2014/01/03] by Rayce

・map_auriga.confでextraシステムのチェック時間を設定できるように追加（map.*, extra.c, conf/map_auriga.conf）
  extraチェックのタイマーを作動させたくない場合は 0 を指定してください

・ログイン中のパーティメンバーを取得する処理を party_getvaliablesd() としてまとめる（party.*, memorial.c）

・マスターのsdを返す処理を map_bl2msd() としてまとめる（map.*, battle.c, mob.c, skill.c）

・BL_XXX の判定を出来るだけビット演算に変更するよう最適化（battle.c, mob.c, npc.c, skill.c, unit.c）

・使用頻度の低い変数からstaticを取り除く（socket.c）

----------------------------------------
//1169 [2014/01/02] by Rayce

・[SQL] Auriga-1163以降、sqlquery関数でSELECTしたときに結果が取得できないバグを修正（script.c）
          reported by LunarPhantomさん

・[TXT] マップ永続変数を保存する時間間隔を conf/script_auriga.conf で指定できるように拡張（script.c）
        これまでと同様デフォルトは300秒

----------------------------------------
//1168 [2014/01/01] by Rayce

・Athena-2265をベースにWindowsサービス化に対応（core.*, winservice.*）
	-> Windowsでのみ有効、Linuxの場合は何もしない。
	   コンパイルオプションは必要なし。

	-> サービスへの登録および削除はOS標準の sc.exe コマンドを使用。
	   詳細は doc/instasv.txt を参照。

	-> core.cの構造を変更。
	   起動パラメータ --service-name を直接起動とサービス起動の判定に利用。
	   大まかな処理の流れは以下。
	     * 直接起動時（これまでと同じ）
	         1. main() からエントリ
	         2. 起動パラメータを取得
	         3. --service_name が指定されてないことを確認
	         4. main_sub() を実行

	     * サービス起動時
	         1. main() からエントリ
	         2. 起動パラメータを取得
	         3. --service-name からサービス名を読み取る
	         4. 起動パラメータをコピーしてSCMに登録
	         5. SCMより winservice_main() が実行
	         6. SCMへ準備開始を通知後、main_sub() を実行

	-> 起動パラメータに --stdout, --stderr を追加。
	   標準出力および標準エラー出力をログファイルへリダイレクトできるように拡張。

・サーバ起動時およびサービス起動時にメッセージを出力するように拡張
  ログファイルから起動と終了を追跡できるようにする（core.c, winservice.c）

・出力のバッファリングを無効にする（core.c）
	Suggest by mapleさん、thanks a lot!!

・doc/account_making.txt にSQLモードでの直接編集方法を追記（doc/account_making.txt）

・サーバ起動時に指定可能な引数についての仕様を別ドキュメントとして分離
  （doc/commandline_parameter.txt, doc/distribute_servers.txt）

----------------------------------------
//1167 [2014/01/01] by Rayce

・[TXT] Auriga-1166の private_ 変数名の変更漏れ修正（chardb_txt.c）

・[TXT] セーブデータの読み込み/書き込みに失敗したときはエラーメッセージを出力するように強化

・各種dbファイルの読み込み失敗時のエラーメッセージを統一

・サーバ起動時の引数において、未定義のものがあっても exit(1) せずに続行するように変更
  （login.c, char.c, map.c, converter.c）

・malloc.cでエラーメッセージ出力が標準出力であった場合はハンドラをクローズしないように変更（malloc.c）

・utils.hが単体でリンクできるように stdio.h をincludeする（utils.h）

----------------------------------------
//1166 [2013/12/31] by Rayce

・VC++コンパイルオプション /TP 有効時のエラーおよび警告について一部修正
	-> item構造体の private 変数名を private_ に変更（mmo.h, chardb_*.c, char-converter.c, clif.c）

	-> clif_parse_QuestState(), mail_getappend() でint型の戻り値をbool型で受け取っていた問題を修正
	   （clif.c, mail.c）

	-> bool型変数へint値を設定していた問題を修正（login_httpd.c）

	-> sqldbs_num2datatype() の戻り値の型を enum enum_field_types に変更（sqldbs.c）

・[SQL] friend テーブルから name カラムを削除、キャラ名は char_data テーブルから参照する
        （chardb_sql.c, char-converter.c, main.sql）

----------------------------------------
//1165 [2013/12/31] by Rayce

・PRE_RENEWAL が定義されていないとき、コンパイル時に「warning: unused variable」の
  警告が発生するのを修正（battle.c）

・ジャーナル有効時、mapreg_txt_sync がstatic無しで再定義されているためにコンパイル
  エラーが発生する問題を修正（mapreg_txt.c）

・Auriga-1164以降、gccコンパイル時に「unknown conversion type character」の警告が
  発生するのを修正（pc.c）

・[SQL] gccコンパイル時に「unused variable」の警告が発生するのを修正（account_sql.c）

----------------------------------------
//1164 [2013/12/31] by Rayce

・グローバル変数は大文字/小文字を区別しないように変更（pc.c）

  ※これまでグローバル変数（prefixなし, #変数, ##変数）は大文字/小文字を区別して
    保存されていました。
    特にSQLモードの場合は「Duplicate entry」エラーが発生し、保存処理に失敗します。
    今後は他の変数と同様に大文字/小文字は区別せずに扱われます。

		set BUF, 1;
		set Buf, 2;
		debugmes BUF + ":" + Buf;	// 1:2が表示されていた、今後は 2:2 となる

・グローバル変数の読み取り/書き出し処理を共通化（pc.*）

・[SQL] ランキングデータを構築する際、LEFT JOINを使って処理を高速化（chardb_sql.c）

----------------------------------------
//1163 [2013/12/31] by Rayce

・[SQL] rAthenaをベースにsqldbs.cの構造を刷新
	-> MYSQL mysql_handle を直接使うのではなく、sqldbs_handle構造体を利用する
	   MYSQL_RES を内包しているので、MySQLハンドラと結果セットの紐付けが可能

	-> クエリ発行後は mysql_store_result() まで一括で実行されるため、すぐにフェッチを
       実行できるように簡略化されている

	-> sqldbs_fetch() は MYSQL_ROW ではなくtypedef元の char** を返す
	   これにより MYSQL_*** 系の型をsqldbs.c以外で記述しなくて済む

	-> 結果セット MYSQL_RES の有無は sqldbs_has_result() で判定する

	-> トランザクション開始・コミット・ロールバック処理をそれぞれ関数化
	   通常MySQLではトランザクションのネストが出来ないため、自前でネストに対応

	-> 安全のため sqldbs_query() および sqldbs_stmt_prepare() で可変長文字列の合成時の
	   文字列長チェックを追加

	-> MYSQL_STMT を直接使うのではなく、sqldbs_stmt構造体を利用する
	   MYSQL_BIND を内包しており動的にパラメータと結果カラムのバインドを内部で実行可能

	-> パラメータのバインド時は、登録されているステートメントを元にパラメータの数を
	   自動的に割り出す

	-> 結果カラムのバインド時は、登録されているステートメントを元にカラム数を
	   自動的に割り出す

	-> sqldbs_stmt_bind_result() を実行することで結果カラムに結果が格納される

	-> 1度バインドした sqldbs_stmt 構造体は使い回しが可能
	   sqldbs_execute() ⇒ sqldbs_stmt_bind_result() ⇒ sqldbs_stmt_fetch() を繰り返して
	   データを取得ことが可能になる

	-> エラー発生時は発行したクエリの全文を表示するように拡張
	   どのクエリで失敗したのか特定できるようになる

	-> Auriga-1158で追加したクローズ処理時のメッセージは、sqldbs_connect() 時に
	   設定するように変更

・[SQL] 少なくとも INSERT/UPDATE/DELETE が複数回実行される場合はトランザクション処理を行うよう改善
        トランザクションに失敗した場合はセーブデータのキャッシュへの保存は行わない

・[SQL] tmp_sql変数のexternを廃止

・[SQL] strecpy() 用のデフォルトのMYSQLハンドルを外部から設定できるように
        sqldbs_set_default_handle() を追加

・[SQL] セーブデータのキャッシュの削除処理を numdb_erase() だけで行うように高速化

・[SQL] INSERT/UPDATE/DELETE が実行される関数は戻り値をbool型に統一

・[SQL] chardb_sql_make() でMYSQL_BIND配列の数が小さく、バッファオーバーフローが
        発生していたのを修正

・[SQL] 倉庫のアイテム数が非常に多い場合（特にギルド倉庫で1000個近い場合）、chardb_sql_saveitem() で
        INSERT用のSQL文を組み立てるときにバッファオーバーフローが発生する問題を修正
        65536byteの更に2倍まで配列サイズを拡張

・全体的なリファクタリング
・全体的にnullpoチェックの強化

----------------------------------------
//1162 [2013/12/29] by Rayce

・BCCコンパイル時の警告修正（grfio.c）

・GMコマンド /recall2 がID指定の @recall として動作するように実装（clif.c）

・GMコマンド /remove2 がID指定の @jumpto として動作するように実装（clif.c）

・pc_unequip() を多重に呼び出す可能性がある場合、status_calc_pc_stop_begin() で
  保護ように改善（clif.c, pc.c, skill.c）

----------------------------------------
//1161 [2013/12/29] by Rayce

・[TXT] ジャーナル機能がONのとき、セーブデータが存在しない場合にデータの保存処理を
        行うと「journal not ready」のエラーが発生するのを修正
        セーブデータが無い場合でもロールフォワードを実行することが可能になる

・[TXT] mapreg_journal_convert() のデバッグ用コードを削除（mareg_txt.c）

----------------------------------------
//1160 [2013/12/29] by Rayce

・マップサーバのタグ名が他のマップサーバと重複していた場合に警報を発するように改善
  （char.*, map.c, chrif.c, mmo.h）
	-> チェックされるのは同一キャラサーバ配下のみ
	   他キャラサーバにあるマップサーバはチェックしない

・キャラサーバ内のメッセージで、マップサーバタグ名を表示するように拡張（char.c）

・サーバ間パケットドキュメント更新（doc/serverlink_packet.txt）

----------------------------------------
//1159 [2013/12/28] by Rayce

・@mannerpointの仕様をrAthena仕様に合わせる（clif.*, atcommand.c）
	-> msg_auriga.conf を使わずパケット 0x14a, 0x14b を利用する
	-> ポイントを0にすると SC_NOCHAT 状態を解除できる

・GMコマンド /rc が @mannerpoint として動作するように実装（clif.c）

・GMコマンド /remove は /shift と同じ動作として実装（clif.c）

・GMコマンド /check は clif_initialstatus() と同等の動作として実装（clif.c）

----------------------------------------
//1158 [2013/12/28] by Rayce

・[TXT] 永続マップ変数の保存のジャーナリング対応（mapreg_txt.*, journal.*）

・[SQL] 永続マップ変数の変更/削除があった場合、即座にMySQLサーバを更新するように変更（mapreg_sql.*）

  ※login系やchar系のセーブデータと同じ機構に合わせます。
	これにより自動セーブ待ち時点でサーバが落ちてもセーブデータが消失するような事故が無くなります。

・[SQL] スクリプト専用のMySQL接続が確立できていないときはクローズ処理も実施しないように修正（script.c）

・[SQL] SQLサーバとの接続をクローズするとき、どの接続のクローズなのか特定できるように拡張
        （sqldbs.*, account_sql.c, chardb_sql.c, mapreg_sql.c, script.c, converter.c）

・文字列型永続マップ変数をロードするとき、メモリリークが発生するバグを修正（mapreg_txt.c, mapreg_sql.c）

・文字列型変数で指定可能な値の最大バイト数の情報をドキュメント化（doc/script_ref.txt）

----------------------------------------
//1157 [2013/12/28] by Rayce

・mapreg_final() 時、解放済みの str_buf と str_data を参照してサーバクラッシュする
  問題を修正（script.c）
	reported by LunarPhantomさん

・userfunc_db を外部に公開せず、getter/setter を用意する（npc.c, script.*）

----------------------------------------
//1156 [2013/12/27] by Rayce

・Auriga-1155以降、config設定が読み込まれず mapreg_init() および mapreg_final() が
  呼び出されていない問題を修正（map.c, script.c）
	-> reported by LunarPhantomさん

・[SQL] MySQL接続時のcharsetのデフォルトを cp932 に変更

・[SQL] MySQLサーバ接続時にIP, Port, User, DB名の情報を表示するように変更（sqldbs.c）

----------------------------------------
//1155 [2013/12/26] by Rayce

・マップ変数のセーブ処理をTXTモードとSQLモードとでソースファイルを分離
  （map.c, script.*, mapreg_txt.*, mapreg_sql.*）

・conf/map_auriga.conf のうち、スクリプト専用のMySQLの設定項目を conf/script_auriga.conf に移動
  （map.*, script.c）

・MySQLへの接続は map.c ではなく mapreg_sql.c で行うように変更
  スクリプト専用のMySQLへの接続は script.c で行うように変更

・mapreg_txt.* および mapreg_sql.* をコンパイル対象に含める
  （Makefile, bcc32_make.bat, vc_make.bat, map.dsp, map_sql.dsp）

----------------------------------------
//1154 [2013/12/26] by Rayce

・コンパイルオプション /W4 有効時の警告修正
	-> warning C4189: 'xxx' : ローカル変数が初期化されましたが、参照されていません
	-> warning C4245: '=' : 'int' から 'unsigned int' に変換しました。signed/unsigned が一致しません。
	-> warning C4389: '!=' : signed と unsigned の数値を比較しようとしました。
	-> warning C4701: 初期化されていない可能性のあるローカル変数 'xxx' が使用されます
	-> warning C4702: 制御が渡らないコードです。

・イクシードブレイクの移動速度減少が、イクシードブレイクのスキルLvではなくフリーキャストのスキルLvを
  元に計算されていたのを修正（unit.c）

・ファイルのサイズを取得するとき、fseek, ftell を使わず stat を利用するように改善（httpd.c, grfio.c, map.c）

・map_mdmap_clean() のリファクタリング（map.c）

----------------------------------------
//1153 [2013/12/19] by refis

・ベナムフォグの回復処理のミスを修正（skill.c）

----------------------------------------
//1152 [2013/12/19] by refis

・NPCスキル「ベナムフォグ」実装（skill_cast_db.txt, skill_db2.txt, skill_db.txt, skill_unit_db.txt, skill.c）

・client_packet.txtの一部訂正（client_packet.txt）

・パケット0x8c7, 0x99fでウォーロックスキル「ラディウス」を参照していた箇所をユニット範囲に変更（clif.c）

----------------------------------------
//1151 [2013/12/07] by Rayce

・Auriga-1149で、clif_changelook() のパケット送出位置が間違っていたのを修正（clif.c）

・出来る限りWT系およびELE系定数を使用するように変更（battle.c, status.c）

----------------------------------------
//1150 [2013/12/07] by Rayce

・Auriga-0822以降、waitingroom命令の引数 job が正しく動作しなくなっていたのを修正（chat.c, pc.*, script.c）
	-> pc_check_useclass() を整理し、職業値のビットを返す関数 pc_get_job_bit() に変更。
	-> チャットの職業制限のビットは pc_get_job_bit() を参照するように変更。

・Auriga-0805以降、skill_require_db.txtの list_weapon 項目について、二刀流（93~98）の設定が
  無効になっていたのを修正（pc.c, skill.*, status.c）

・item_db.txtのSLOTの値が0~4以外の値の場合、バッファオーバー/アンダーフローが発生しないように
  読み込み時にチェックを入れる（itemdb.c）

・@optionの引数を16進数でも指定できるように拡張（atcommand.c）

・スクリプトにおいてクラスの番号指定をconst.txtの定数に変更（quest/npc_quest_arena.txt）

・helpおよびdb_refのメンテナンス（itemdb.c, conf/help.txt, doc/db_ref.txt）

・DBのヘッダ行のコメントの内容を正しく更新（db/size_fix.txt, db/skill_db2.txt）

----------------------------------------
//1149 [2013/12/07] by Rayce

・mob_talk() 実行するとき、最大値の判定を行うように強化（mob.c）

・pc_break_equip() の引数 where をunsinged short型からint型に拡張し、全てのLOC定数を受け入れることが
  可能にしておく（pc.*）

・map_session_data構造体の unbreakable_equip メンバをunsigned short型からunsinged int型に拡張し、
  全てのLOC定数でビット演算が可能にしておく（map.h）

・clif.cのリファクタリング、武器の見た目を取得する処理を clif_get_weapon_view() としてまとめる（clif.c）

・PACKETVERが3以下のとき、clif_changelook() でコンパイルエラーが発生する問題を修正（clif.c）

・装備箇所を示すLOC系定数をitemdb.hからmmo.hに移動し、char.cでも利用可能にする（mmo.h, itemdb.h）

・出来る限りenum型を使うように変更
  （chardb_txt.c, char.c, clif.c, extra.c, mob.c, pc.c, script.c, skill.c, status.c）

----------------------------------------
//1148 [2013/12/06] by Rayce

・関数名と意味を一致させるため pc_isquitable() の判定結果を反転（pc.c, clif.c）

・クライアントの切断パケット 0x18b を送る処理を clif_disconnect_ack() としてまとめる（clif.*）

・クライアントの終了判定で、エンジェラスの有無の判定方法をビット演算に変更（pc.c）

・INF系定数の名称を変更（battle.c, bonus.c, clif.c, mob.c, pet.c, script.c, skill.*, status.c, unit.c）

・INF2系定数を新たに設置（atcommand.c, battle.c, clif.c, pc.c, skill.*）

・LOOK系定数をmap.hからpc.hに移動（map.h, pc.h）

・出来る限りenum型を使うように変更（char.c, battle.c, mob.c, pc.c, status.c）

・status_change構造体で使用するopt1はビットフラグではないので、OPT1系のenum定数を16進数から
  10進数に変更する（status.h）

・clif_GMmessage() と clif_announce() のflag引数をunsigned int型に変更（clif.*）

----------------------------------------
//1147 [2013/12/06] by Rayce

・2進数対応の strtol, strtoul として strbtol, strbtoul を実装（utils.*）

・文字列を数値に変換するとき、2進数/8進数/16進数での変換をサポート（script.c, db/script_ref.txt）
	-> これまでは conv_num() が10進数固定だったのを基数を可変に変更。
	-> 例えば以下のような変換が可能。
		set '@val, "0b11" ⇒ 3
		set '@val, "077" ⇒ 63
		set '@val, "0xff" ⇒ 255

・@writevars や const.txt で2進数が扱えるように拡張（atcommand.c, script.c）

----------------------------------------
//1146 [2013/12/06] by Rayce

・べき乗演算子 ** を右結合に変更（script.c, doc/script_ref.txt）

  ※PerlやPythonと同じ仕様です。
    例えば、4 ** 3 ** 2 = 4096 ではなく 4 ** 3 ** 2 = 262144 となります。
    つまり、4 ** (3 ** 2) と等価になります。

・battle_configの etc_log と error_log について、スクリプトに関連する部分を
  script_configとして別途定義する（script.c）

  ※battle_config.etc_log   => script_config.debug_mode_log
    battle_config.error_log => script_config.error_log

・スクリプトのDEBUG用のメッセージを変更（script.c）

----------------------------------------
//1145 [2013/12/05] by refis

・装備ウィンドウの表示方法をデフォルトで誰でも利用可能にする（battle_auriga.conf）

・スクリプト関数「checkactiveitem」は活性状態を活性フラグで返すよう変更（script.c, doc/script_ref.txt）

・「審判のメイス」および「審判のメイスⅡ」スクリプトのアイテム活性効果を修正（db/item_db.txt）

----------------------------------------
//1144 [2013/12/05] by Rayce

・スクリプトにべき乗の演算子 ** を追加（script.c, doc/script_ref.txt）

  ※Perlライクな使い方になります。
    例] 2 ** 3 => 8 (2の3乗)

・const.txtに SC_SIGHT を定義し「クリムゾンオーブ」で使用する（db/const.txt, db/item_db.txt）

・「グロリアススピア」および「グロリアスランス」スクリプトの } 閉じ位置が
  間違っていたので修正（db/item_db.txt）

・「Kotakahuanaのガチャポン」の末尾にある不要な文字を削除（db/item_db.txt）

----------------------------------------
//1143 [2013/12/04] by Rayce

・出来る限りexternを止める
	-> ペット/傭兵/精霊のデータベースはインデックスではなくデータベースそのものを検索して
       返すように変更（atcommand.c, pet.*, merc.*, elem.*, npc.c, skill.c, status.c）

	-> quest_dbはそもそも公開していないのでexternを除去（quest.h）
	-> memorial_dataはそもそも公開していないのでexternを除去（memorial.h）

	-> スクリプトエラー判定用のコードをstaticに収める
       代わりに判定用の関数 script_is_error() を定義
       （elem.c, homun.c, itemdb.c, merc.c, npc.c, pet.c, script.*）

----------------------------------------
//1142 [2013/12/04] by Rayce

・gccでコンパイル時、msg.hでエラーが発生するのを修正（msg.h）

・gccでコンパイル時、「No sush file or directory」という警告が発生するのを修正（Makefile）

・status_get_race() で変数が未初期化の警告を修正（status.c）

・Linux環境で、SIGQUITを送る場合（CTRL+\）も終了処理できるように追加（core.c）

・[SQL] converterで配列のサイズが小さいためバッファオーバーフローが発生する問題を修正（char-converter.c）

----------------------------------------
//1141 [2013/12/04] by Rayce

・const.txt にサイズ系定数（Size_Small, Size_Medium, Size_Big）を追加（const.txt）

・item_db.txt のサイズ系ボーナスを定数に変更（db/item_db.txt, db/item_db_pre.txt）

・「グロリアススピア」のEquipScriptが動作していなかったのを修正（item_db.txt）
	reported by LunarPhantomさん

・item_db.txtの記述ミスを修正（item_db.txt）
	reported by LunarPhantomさん

・doc修正（item_bonus.txt, script_ref.txt）

----------------------------------------
//1140 [2013/12/04] by Rayce

・スクリプトの } 閉じの解析チェックを強化（script.*, elem.c, homun.c, itemdb.c, merc.c, npc.c, pet.c）
	-> npc_parse_script_line() を parse_script_line_curly() として script.c に共通化
	-> parse_script_line_curly() で curly_count が0になった時点でループを抜けるように改修
	-> parse_script() でも } で終わってない場合にエラー扱いにするように改修
	-> アイテム・ホム・傭兵・妖精のスクリプトの } 閉じチェックを共通化した
       parse_script_line_end() を新しく追加

・1行しかないスクリプトでエラーが発生したとき（missing right curlyなど）、表示されるエラー発生行が
  ズレる問題を修正（script.c）

・pet_db.txt および homun_db.txt の読込時、スクリプトエラーが発生すると読み込みカウントが増えない
  問題を修正（pet.c, homun.c）

・「missing right curly」が発生するアイテムスクリプトを修正（db/item_db.txt, db/item_db_pre.txt）

・スクリプト依存変数（'）を関数依存変数（'@）に変更（npc_town_hugel.txt）

----------------------------------------
//1139 [2013/12/03] by Rayce

・item 構造体と guild_member 構造体の並び順をpackに合わせて整理（mmo.h）
・mmo_status構造体の refuse_partyinvite と show_equip メンバをchar型に圧縮（mmo.h）

・merc_search_index() および elem_search_index() は -1 を返す可能性があるため、インデックスの
  値の判定を追加するように強化（status.c）

・0除算が発生する可能性を修正（bonus.c, pet.c, skill.c）

・pet_hungry() を pet_hungry_timer() にリネーム（pet.c）

----------------------------------------
//1138 [2013/12/03] by Rayce

・オートスペル、アクティブアイテム、bonus系命令の処理を pc.c から分離し、bonus.c に集約
  （bonus.*, battle.c, map.*, pc.*, script.c, skill.*）

・extraシステムを pc.c から分離し、extra.c に集約（extra.*, map.c, pc.c）

----------------------------------------
//1137 [2013/12/02] by Rayce

・Message Of The Day の処理を pc.c から msg.c に移管（atcommand.c, map.c, msg.*, pc.*）

----------------------------------------
//1136 [2013/12/02] by Rayce

・item_db.txtで使用するステータス異常の定数をconst.txtに追加（const.txt, db/item_db.txt）

・item_db.txtのスクリプトで関数が多重に呼び出されている部分を最適化
  （db/item_db.txt, db/pre/item_db_pre.txt）

----------------------------------------
//1135 [2013/12/02] by Rayce

・getbaseclass関数をscript.cからpc.cに移動（pc.*, script.c）

・以下のアイテムのオートスペル設定で、存在しない定数 EAS_ITEMNOCOST が記載されていたので削除
  （db/item_db.txt, db/pre/item_db_pre.txt）
	-> リングオブレゾナンス
	-> マグマフィスト
	-> アイシクルフィスト
	-> エレクトリックフィスト
	-> サイズミックフィスト
	-> 魔法のやかん

・以下のアイテムのボーナス設定で、存在しない定数 bAddFixCastRateAll が記載されていたので修正
  修正情報不明につきrAthenaから適当に移植（db/item_db.txt）
	-> おいしいロリポップR

・以下のアイテムのボーナス設定で、存在しない定数 bCritAtkRate が記載されていたので
  bAddCriticalDamage を使うように修正（db/item_db.txt）
	-> 虐殺のカタール(特攻)
	-> 戦慄のカタール

・以下のアイテムのボーナス設定で「Eff_Burning」のスペルミスを修正（db/item_db.txt）
	-> イグニスステイル
	-> バナスパティカード

・以下のアイテムのボーナス設定で「Eff_Silence」のスペルミスを修正（db/item_db.txt）
	-> カプラの猫耳ヘアバンド

・以下のアイテムのボーナス設定で「Rct_NonBoss」のスペルミスを修正（db/item_db.txt）
	-> サムライマスク

・以下のアイテムの状態異常設定で「SC_BLESSING」のスペルミスを修正（db/item_db.txt）
	-> 神妙な缶詰

・以下のアイテムで、非推奨の function_jobgroup.txt の関数を呼び出しているので修正
  修正情報不明につきrAthenaから適当に移植（db/item_db.txt）
	-> 3Dメガネ
	-> 3DメガネR

・以下のアイテムで、存在しない状態異常 SC_ELEMENTUNDEAD を SC_UndeadArmor に修正（db/item_db.txt）
	-> キュアーフリー

・以下のアイテムで不要な変数 n gが記載されていたので削除（db/item_db.txt, db/pre/item_db_pre.txt）
	-> ボーンヘッド

----------------------------------------
//1134 [2013/12/02] by Rayce

・pet_db.txt についても Auriga-1131 で const.txt に新しく定義した定数を使うように変更（db/pet_db.txt）

・アイテムボーナスの bRace のパラメータチェックの強化（pc.c, doc/item_bonus.txt）

・script_auriga.conf の refine_posword に余計な文字が混入していたのを修正（conf/script_auriga.conf）

・タイマーのtick変数には出来る限り unsigned を付与する（clif.*, map.h, pc.h, pet.c, skill.c）

----------------------------------------
//1133 [2013/12/02] by Rayce

・アイテムボーナス用の配列サイズのハードコーディングを避けるため定数を定義（map.h, pc.c）
	-> MAX_BONUS_CLASS: アイテムボーナスのクラスの容量
	-> MAX_BONUS_ADDDROP: アイテムボーナスのドロップの容量
	-> RCT_ALL: 全種族用

・bWeaponAtk と bWeaponAtkRate の配列は WT_MAX が最大なので、引数に指定できる数値を23までに制限する
  （doc/item_bonus.txt, battle.c, pc.c, status.c）

・item_db.txt について、Auriga-1131で const.txt に新しく定義した定数を使うように変更
  （db/item_db.txt, db/pre/item_db_pre.txt）

・item_db.txt の「サムライマスク」と「幸福の帽子」の bonus2命令の引数の使い方が間違っていたので修正（db/item_db.txt）

----------------------------------------
//1132 [2013/12/02] by Rayce

・Auriga-1130で更に size_t の型変換警告が出るのを修正（login.c, char.*, clif.c）
	reported by NP3228さん

----------------------------------------
//1131 [2013/12/02] by Rayce

・db/mob_group_db.txtのグループIDが MAX_MOBGROUP を越えるときは警告を表示し、スキップするように修正（mob.c）
	-> status_get_group() は補正せずに db/mob_group_db.txt のグループIDを返す。
       そのため敵グループ系のアイテムボーナス利用時に配列がバッファオーバーフローするため

・db/item_group_db.txtのグループIDが MAX_ITEMGROUP を越えるときは警告を表示し、スキップするように修正（itemdb.c）
	-> itemdb_group() は補正せずに db/item_group_db.txt のグループIDを返す。
       そのため bItemHealRate のアイテムボーナス利用時に配列がバッファオーバーフローするため

・装備関連のアイテムボーナス用の配列サイズが小さいので 11⇒EQUIP_INDEX_MAX まで拡張する（map.h）
	-> current_equip_item_index を使用するケースが該当する

・AddEff系アイテムボーナス用の配列サイズを MAX_SKILL_ADDEFF 定数で固定して整合性を取る（map.h, pc.c）

・MAX_SKILL_ADDEFF が状態異常の配列数なのか bAddEffSkill で登録できる容量なのか曖昧なので再定義（map.h, battle.c, pc.c, skill.c）
	-> MAX_EFF_TYPE: アイテムボーナスの状態異常の数
	-> MAX_SKILL_ADDEFF: bAddEffSkillで登録できる容量

・bBreakMyEquipWhenAttack と bBreakMyEquipWhenHit が bonus2 でも使えるように重複定義されていたので削除（pc.c）

・bLossEquipWhenHit の説明が無かったので追記（doc/item_bonus.txt）

・bonus系のパラメータチェックを強化（pc.c）

・db/const.txt に以下の定数を追加（db/const.txt）
	-> Rct系: 種族
	-> Ele系: 属性
	-> Emy系: 敵タイプ

----------------------------------------
//1130 [2013/12/01] by Rayce

・getequipname関数で引数に12以上で且つその部位の装備がない場合にバッファオーバーフローが
  発生するバグを修正（script.c, conf/script_auriga.conf）

・clif_disp_overhead() における型変換の警告を修正（clif.c）
	reported by NP3228さん

・メッセージ長を格納する変数は size_t型 に統一する
  （int_guild.c, int_party.c, inter.c, clif.*, guild.*, intif.*, party.*）

・1128のconst付与の抜け漏れ追加修正

----------------------------------------
//1129 [2013/12/01] by Rayce

・サーバースナップショット（version.h）

・0882で混入したwarpフォルダの削除
